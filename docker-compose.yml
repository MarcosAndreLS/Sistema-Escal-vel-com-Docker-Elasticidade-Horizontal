services:
  flask1:
    build:
      context: .  
      dockerfile: ./app/Dockerfile
    networks:
      - shared-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
        reservations:
          cpus: "0.2"
          memory: 200M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

  flask2:
    build:
      context: .  
      dockerfile: ./app/Dockerfile
    networks:
      - shared-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
        reservations:
          cpus: "0.2"
          memory: 200M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

  flask3:
    build:
      context: .  
      dockerfile: ./app/Dockerfile
    networks:
      - shared-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
        reservations:
          cpus: "0.2"
          memory: 200M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - shared-network

  load-tester:
    build:
      context: .  
      dockerfile: ./load_test/Dockerfile
    container_name: load_tester_container
    networks:
      - shared-network
    ports:
      - "8089:8089"  # Expondo a porta para o Locust
    depends_on:
      - flask1
      - flask2
      - flask3

  router:
    build:
      context: .  
      dockerfile: ./manual_transfer/Dockerfile
    container_name: manual_transfer_container
    ports:
      - "8081:8081"
    networks:
      - shared-network

  load-balancer:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - shared-network
    depends_on:
      - flask1
      - flask2
      - flask3

networks:
  shared-network:
    driver: bridge
